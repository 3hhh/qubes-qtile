# https://github.com/qtile/qtile/pull/5094

--- qtile/libqtile/group.py
+++ qtile/libqtile/group.py
@@ -38,6 +38,33 @@
 if TYPE_CHECKING:
     from libqtile.command.base import ItemT
 
+class FocusLock():
+    """Global focus lock.
+
+    If the global focus lock is active, qtile attempts to keep the window
+    focus where it currently is until it is unlocked again.
+    """
+    _locks = []
+
+    @classmethod
+    def is_active(cls):
+        return bool(len(FocusLock._locks) != 0)
+
+    @classmethod
+    def get(cls):
+        return FocusLock._locks
+
+    @classmethod
+    def lock(cls, obj):
+        if obj:
+            FocusLock._locks.append(obj)
+
+    @classmethod
+    def unlock(cls, obj):
+        try:
+            FocusLock._locks.remove(obj)
+        except ValueError:
+            pass
 
 class _Group(CommandObject):
     """A container for a bunch of windows
@@ -161,7 +188,7 @@
                         logger.exception("Exception in layout %s", self.layout.name)
                 if floating:
                     self.floating_layout.layout(floating, screen_rect)
-                if self.current_window and self.screen == self.qtile.current_screen:
+                if self.current_window and self.screen == self.qtile.current_screen and not FocusLock.is_active():
                     self.current_window.focus(warp)
                 else:
                     # Screen has lost focus so we reset record of focused window so
@@ -211,6 +238,9 @@
         if self.qtile._drag and not force:
             # don't change focus while dragging windows (unless forced)
             return
+        if FocusLock.is_active():
+            self.layout_all(warp)
+            return
         if win:
             if win not in self.windows:
                 return
--- qtile/libqtile/widget/prompt.py
+++ qtile/libqtile/widget/prompt.py
@@ -45,6 +45,7 @@
 from libqtile.command.interface import CommandError, QtileCommandInterface
 from libqtile.log_utils import logger
 from libqtile.widget import base
+from libqtile.group import FocusLock
 
 
 class AbstractCompleter(metaclass=abc.ABCMeta):
@@ -484,6 +485,7 @@
         self.display = self.prompt.format(prompt=prompt)
         self.display = pangocffi.markup_escape_text(self.display)
         self.active = True
+        FocusLock.lock(self)
         self.user_input = ""
         self.archived_input = ""
         self.show_cursor = self.cursor
@@ -588,6 +590,7 @@
     def _unfocus(self):
         # Remove focus from the widget
         self.active = False
+        FocusLock.unlock(self)
         self._update()
         self.bar.widget_ungrab_keyboard()
 
